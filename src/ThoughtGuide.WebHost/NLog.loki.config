<?xml version="1.0" encoding="utf-8"?>

<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      throwConfigExceptions="true"
      throwExceptions="true"
      autoReload="true">

    <extensions>
        <add assembly="NLog.Appsettings.Standard" />
        <add assembly="NLog.Web.AspNetCore" />
        <add assembly="NLog.Loki" />
    </extensions>

    <targets>
        <target name="AllLogTargetConsole"
                xsi:type="ColoredConsole"
                useDefaultRowHighlightingRules="true"
                stdErr="true"
                layout="${date}|${right:${logger}:length=60:padding=-60}|${uppercase:${level}:padding=-5}|${replace:inner=${message}:searchFor=\\r\\n|\\s:replaceWith= :regex=true}|${replace:inner=${all-event-properties:exclude=Title,Details}:searchFor=,:replaceWith=:regex=true:whenEmpty=No properties}|${event-properties:Details:whenEmpty=No details}|TraceId=${aspnet-TraceIdentifier:whenEmpty=0}|${replace:inner=${exception:format=ToString}:searchFor=\\r\\n|\\s:replaceWith= :regex=true}" />

        <target name="AllLogTarget"
                xsi:type="loki"
                endpoint="${appsettings:name=LoggingFeatures.Loki.Endpoint}"
                orderWrites="false"
                layout="${date} | ${logger} | ${uppercase:${level}} | ${event-properties:Title:whenEmpty=${replace:inner=${message}:searchFor=\\r\\n|\\s:replaceWith= :regex=true}} | ${replace:inner=${all-event-properties:exclude=Title,Details}:searchFor=,:replaceWith=:regex=true:whenEmpty=No properties} | ${event-properties:Details:whenEmpty=No details} | TraceId=${aspnet-TraceIdentifier:whenEmpty=0} | ${onexception:${exception:format=shortType}\: ${exception:format=message}} ">
            <label name="service" layout="ThoughtGuide" />
            <label name="logtype" layout="All" />
        </target>

        <target name="ErrorsLogTarget"
                xsi:type="loki"
                endpoint="${appsettings:name=LoggingFeatures.Loki.Endpoint}"
                orderWrites="false"
                layout="${date} | ${logger} | ${uppercase:${level}} | ${event-properties:Title:whenEmpty=${message}} | ${all-event-properties:exclude=Title,Details:whenEmpty=No properties} | ${event-properties:Details:whenEmpty=No details} | TraceId=${aspnet-TraceIdentifier:whenEmpty=0} | ${exception:format=ToString} ">
            <label name="service" layout="ThoughtGuide" />
            <label name="logtype" layout="Errors" />
        </target>

        <target name="StartupLogTarget"
                xsi:type="loki"
                endpoint="${appsettings:name=LoggingFeatures.Loki.Endpoint}"
                orderWrites="false"
                layout="${date} | ${logger} | ${uppercase:${level}} | ${event-properties:Title:whenEmpty=${message}} | ${replace:inner=${all-event-properties:exclude=Title,Details}:searchFor=,:replaceWith=:regex=true:whenEmpty=No properties} | ${event-properties:Details:whenEmpty=No details} | TraceId=${aspnet-TraceIdentifier:whenEmpty=0} | ${onexception:${exception:format=shortType}\: ${exception:format=message}} ">
            <label name="service" layout="ThoughtGuide" />
            <label name="logtype" layout="Startup" />
        </target>

        <target name="AppLogTarget"
                xsi:type="loki"
                endpoint="${appsettings:name=LoggingFeatures.Loki.Endpoint}"
                orderWrites="false"
                layout="${date} | ${logger} | ${uppercase:${level}} | ${event-properties:Title:whenEmpty=${message}} | ${replace:inner=${all-event-properties:exclude=Title,Details}:searchFor=,:replaceWith=:regex=true:whenEmpty=No properties} | ${event-properties:Details:whenEmpty=No details} | TraceId=${aspnet-TraceIdentifier:whenEmpty=0} | ${onexception:${exception:format=shortType}\: ${exception:format=message}} ">
            <label name="service" layout="ThoughtGuide" />
            <label name="logtype" layout="App" />
        </target>

        <target name="RequestsLogTarget"
                xsi:type="loki"
                endpoint="${appsettings:name=LoggingFeatures.Loki.Endpoint}"
                orderWrites="false"
                layout="${date} | ${logger} | ${uppercase:${level}} | ${replace:inner=${message}:searchFor=\\r\\n|\\s:replaceWith= :regex=true} | ${replace:inner=${all-event-properties}:searchFor=,:replaceWith=:regex=true:whenEmpty=No properties} | No details | TraceId=${aspnet-TraceIdentifier:whenEmpty=0} |">
            <label name="service" layout="ThoughtGuide" />
            <label name="logtype" layout="Requests" />
        </target>
    </targets>

    <rules>
        <logger name="*"
                minlevel="Error"
                writeTo="AllLogTarget, AllLogTargetConsole, ErrorsLogTarget"
                final="true" />

        <logger name="ThoughtGuide.HostConfiguration.Logging.StartupLogger"
                minlevel="${appsettings:name=LoggingFeatures.NLog.MinLevels.StartupLogs}"
                writeTo="AllLogTarget, AllLogTargetConsole, StartupLogTarget"
                final="true" />

        <logger name="ThoughtGuide.AppServices"
                minlevel="${appsettings:name=LoggingFeatures.NLog.MinLevels.AppLogs}"
                writeTo="AllLogTarget, AllLogTargetConsole, AppLogTarget"
                final="true" />

        <logger name="Microsoft.AspNetCore.HttpLogging.*"
                minlevel="${appsettings:name=LoggingFeatures.NLog.MinLevels.RequestLogs}"
                writeTo="AllLogTarget, AllLogTargetConsole, RequestsLogTarget">

            <filters defaultAction="Log">
                <when condition="contains('${aspnet-Request-Url}','health')" action="Ignore" />
                <when condition="equals(message,'Response:${newline}')" action="Ignore" />
            </filters>
        </logger>

        <logger name="*"
                minlevel="${appsettings:name=LoggingFeatures.NLog.MinLevels.OtherLogs}"
                writeTo="AllLogTarget, AllLogTargetConsole" />
    </rules>
</nlog>